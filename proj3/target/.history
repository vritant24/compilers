clear
test
run "val x = 3; x"
run "val x : Int = 3; x"
run "val x:Int = 3; x"
run "val x:Boolean = 3; x"
run "val x : Boolean = 3; x"
run "val x : int = 3; x"
run "var x = 3; var y = 5; x = x + 1; y = y + x"
run "var x = 3; x"
run "1+1
run "1+1"
run "val x = 3; x = if(x < 4) 5 else 7"
run "var x = 3; x = if(x < 4) 5 else 7"
run "var x = 0; if(x < 5) x = 7 else x = 3; x"
run "1+1"
run
run "1+1"
run "if(2<3) 4;"
run "if(2<3) 4"
run "def f(x : Int, y : Int) : Int = x + y; f()"
run "1+!"
run "1+1"
run "if(2<3) 4"
run "var x = 5; if(4<6) x=7; x"
run "var x = 4; x = 5"
run "var x = 4; x = 5; x = 6"
run 
run "if(1 < 3) 3"
run "var x = 3; if(3<5) x = 5; x"
run "var x = 3; if(3<5) x = 5;x"
run "var a = 1; var b = 2; a = 2; b = 3"
run "var x = 3; if(3<5) x = 5;x"
run "var test = true; if(test){ test = false };  1"
sbt
run "1+1"
run "val arr = new Array[Int](2); arr(3)"
run "val arr = new Array[Int](2); arr(3) = 4"
run "1+1"
run "def f(x:Int):Int = {x}; f()"
run "1+1
run "1+1"
run "val arr = new Array[Int](3); arr(2) = 5" 
run "def f(x:Int, y:Int): Int = {x + y}; f(3,5)" 
run "var x = 3; x"
run "def f(x:Int) = {x}; f(3)"
run "def f(x:Int) = { x = x + 2; x }; f(3)"
run "def f(x:Int) = { 2 }; f(3)"
run "def f(x:Int) =  2 ; f(3)"
run "def dog() = 2; def cat() = dog(); cat()"
run "def dog() : Int = 2; def cat() = dog(); cat()"
run "def f() : Int = 4; f()"
run "def dog() : Int = 2; def cat() = dog(); cat()"
run "def f(x: Int) = {
  val arr = new Array[Int](x);
  var i = 0;
  var sum = 0;
  while(i < x) {
    sum = sum + arr(i);
    i = i + 1
  };
  sum
};
run "def dog() : Int = 2; def cat() = dog(); cat()"
run "def dog() : Int = 2; dog()""
run "def dog() : Int = 2; dog()"
run "var x = new Array[Int](2); x(1) = 1; x(1)"
run "var x = 5; x"
run "def f():Int = 3; f()"
run "var x = new Array[Int](4); x(0) = 6; x(0)"
run "def f():Int = 3; f()"
run "var x = 5; x"
run "def f(x:Int):Int = {x}; f(3)"
run "def f():Int = 3; f()"
run "def f(x):Int = x + 4; f(5)"
run "def f(x) : Int = x + 4; f(5)"
run "def f(x: Int) : Int = x + 4; f(5)"
run "var x = new Array[Int](4); x(0) = 6; x(0)"
run "def f(x:Int, y:Int):Int = {x + y}; f(4,5)"
run "def f(x:Int) = { val arr = new Array[Int](x); arr(0) }; f(3)"
run "def f(x:Int) = { val arr = new Array[Int](x); arr(0) = 4; arr(0) }; f(3)"
run "var x = new Array[Int](4); x(0) = 6; x(0)"
run "var x = 0; x"
run "def f() = 2; f()"
run "var x = new Array[Int](4); x(0) = 6; x(0)"
run "def f(x:Int) = { val arr = new Array[Int](x); arr(0) = 4; arr(0) }; f(3)"
run "def fun(x:Int) = x + 5; def arr(x:int) = fun(x) + 6; arr(3)"
run "def fun(x:Int) = x + 5; def arr(x:int):Int = fun(x) + 6; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:int):Int = fun(x) + 6; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:int) = fun(x) + 6; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:Int):Int = fun(x) + 6; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:Int):Int = fun(x); arr(3)"
run "def arr(x:Int):Int = x+5; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:Int):Int = 5; arr(3)"
run "def fun(x:Int):Int = x + 5; def arr(x:Int):Int = 5; fun(3)"
run "def x(): Int = y(); def y():Int = 42; x()"
run "def x(): Int = y(5); def y(a:Int):Int = a; x(3)"
run "def x(): Int = y(5); def y(a:Int):Int = a; x()"
run "def fun(x:Int):Int = arr(x); def arr(x):Int = x + 5; fun()"
run "def fun(x:Int):Int = arr(x); def arr(x:Int):Int = x + 5; fun()"
run "def fun():Int = arr(5); def arr(x:Int):Int = x + 5; fun()"
run "def fun(x:Int):Int = arr(5); def arr(x:Int):Int = x + 5; fun(6)"
run "putchar(72)"
run "var x = 0; putchar(72); x"
gdb
